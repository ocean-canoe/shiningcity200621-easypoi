<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.9.RELEASE</version>
  </parent>
  <groupId>com.shiningcity</groupId>
  <artifactId>shiningcity200621-easypoi</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>shiningcity200621-easypoi</name>
  
    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        
        <fastjson.version>1.2.61</fastjson.version>
        <jackson.version>2.10.2</jackson.version>
        <commons-lang3.version>3.8.1</commons-lang3.version>
        <druid.version>1.1.10</druid.version>
    </properties>
  
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <!-- <scope>test</scope> -->
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <!-- mysql驱动 -->
        <!-- <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${druid.version}</version>
        </dependency> -->
        <!-- druid依赖spring-jdbc，所以需要引入spring-jdbc -->
        <!-- <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency> -->
        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        
        <!-- easypoi -->
        <!-- <dependency>
            <groupId>cn.afterturn</groupId>
            <artifactId>easypoi-base</artifactId>
            <version>3.1.0</version>
        </dependency>
        <dependency>
            <groupId>cn.afterturn</groupId>
            <artifactId>easypoi-web</artifactId>
            <version>3.1.0</version>
        </dependency>
        <dependency>
            <groupId>cn.afterturn</groupId>
            <artifactId>easypoi-annotation</artifactId>
            <version>3.1.0</version>
        </dependency> -->
        
		<dependency>
		    <groupId>cn.afterturn</groupId>
		    <artifactId>easypoi-spring-boot-starter</artifactId>
		    <version>4.1.2</version>
		</dependency>
        
    <!-- httpclient -->
    <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
    </dependency>
    <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpmime</artifactId>
    </dependency>
    
        <!-- actuator SpringBoot项目监视管理，附带优雅停机功能 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
    </dependencies>
  
    <build>
        <plugins>
            <!-- 打包插件 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>com.shiningcity.MyApplication</mainClass>
                </configuration>
            </plugin>
            
            <!-- 如果父工程中存在 spring-boot-maven-plugin 插件，打包时依然会将lib和jar打到一起，可以使用下边方法解决 -->
            <!-- <plugin>
			    <groupId>org.springframework.boot</groupId>
			    <artifactId>spring-boot-maven-plugin</artifactId>
			    <configuration>
			        <skip>true</skip>
			    </configuration>
			</plugin> -->
                        
            <!-- 打包插件，打包时将 lib 和 class 分开 -->
		    <!-- <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-jar-plugin</artifactId>
		        <configuration>
		            <archive>
		                生成的jar中，不要包含pom.xml和pom.properties这两个文件
		                <addMavenDescriptor>false</addMavenDescriptor>
		                <manifest>
		                    是否要把第三方jar加入到类构建路径
		                    <addClasspath>true</addClasspath>
		                    外部依赖jar包的最终位置
		                    <classpathPrefix>lib/</classpathPrefix>
		                    项目启动类
		                    <mainClass>com.shiningcity.MyApplication</mainClass>
		                </manifest>
		            </archive>
		        </configuration>
		    </plugin> -->
		    <!--拷贝依赖到jar外面的lib目录-->
		    <!-- <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-dependency-plugin</artifactId>
		        <executions>
		            <execution>
		                <id>copy-lib</id>
		                <phase>package</phase>
		                <goals>
		                    <goal>copy-dependencies</goal>
		                </goals>
		                <configuration>
		                    <outputDirectory>target/lib</outputDirectory>
		                    <excludeTransitive>false</excludeTransitive>
		                    <stripVersion>false</stripVersion>
		                    <includeScope>runtime</includeScope>
		                </configuration>
		            </execution>
		        </executions>
		    </plugin> -->
            
            <!-- 打包时忽略单元测试，注意：单元测试类应该写在src/test/java位置 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/webapp</directory>
                <targetPath>META-INF/resources</targetPath>
                <includes>
                    <include>**/**</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/**</include>
                </includes>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
        </resources>
    </build>
  
</project>